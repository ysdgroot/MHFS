% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class-BinarySwarm.R
\name{BinarySwarm}
\alias{BinarySwarm}
\title{BinarySwarm}
\description{
Abstract base class for a Binary Swarm
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{population_size}}{integer, size of population}

\item{\code{n_bits}}{integer, number of bits to represent}

\item{\code{transferFun}}{object of class \code{TransferFunction} to update from continuous to binary}

\item{\code{global_best}}{list with 2 elements with names \code{Position} and \code{OptimResult}}

\item{\code{population}}{list with \code{Particle} objects}

\item{\code{has_run}}{logical, if the process has been run}

\item{\code{iteration}}{integer, position of the iteration during the process}

\item{\code{max_iteration}}{integer, maximum number of iterations to perform}

\item{\code{use_var_importance}}{logical, if the variable importance should be used}

\item{\code{variable_importance}}{(Experimental) list of length \code{n_bits} to store the feature importance}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BinarySwarm-new}{\code{BinarySwarm$new()}}
\item \href{#method-BinarySwarm-get_population}{\code{BinarySwarm$get_population()}}
\item \href{#method-BinarySwarm-get_global_best}{\code{BinarySwarm$get_global_best()}}
\item \href{#method-BinarySwarm-get_iteration}{\code{BinarySwarm$get_iteration()}}
\item \href{#method-BinarySwarm-get_use_variable_importance}{\code{BinarySwarm$get_use_variable_importance()}}
\item \href{#method-BinarySwarm-get_variable_importance}{\code{BinarySwarm$get_variable_importance()}}
\item \href{#method-BinarySwarm-add_variable_importance}{\code{BinarySwarm$add_variable_importance()}}
\item \href{#method-BinarySwarm-run_process}{\code{BinarySwarm$run_process()}}
\item \href{#method-BinarySwarm-update_all_positions}{\code{BinarySwarm$update_all_positions()}}
\item \href{#method-BinarySwarm-set_global_best}{\code{BinarySwarm$set_global_best()}}
\item \href{#method-BinarySwarm-get_results}{\code{BinarySwarm$get_results()}}
\item \href{#method-BinarySwarm-clone}{\code{BinarySwarm$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-new"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-new}{}}}
\subsection{Method \code{new()}}{
Creation of object of a Binary Swarm-based algorithm
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$new(
  population_size,
  n_bits,
  transferFun,
  particleGenerator,
  use_var_importance = FALSE,
  seed = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{population_size}}{integer, size of the population}

\item{\code{n_bits}}{integer, number of bits to be represented}

\item{\code{transferFun}}{object of class \code{TransferFunction}}

\item{\code{particleGenerator}}{object of class \code{BPG}}

\item{\code{use_var_importance}}{(Experimental) logical
If variable importance can be done using transfer functions}

\item{\code{seed}}{seed for the generation of the population}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-get_population"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-get_population}{}}}
\subsection{Method \code{get_population()}}{
Get the current population of the swarm
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$get_population()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list with Particles with the population
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-get_global_best"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-get_global_best}{}}}
\subsection{Method \code{get_global_best()}}{
Get the global best after a run
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$get_global_best()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-get_iteration"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-get_iteration}{}}}
\subsection{Method \code{get_iteration()}}{
Returns the iteration during the process
Needed if the algorithm needs the iteration number
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$get_iteration()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-get_use_variable_importance"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-get_use_variable_importance}{}}}
\subsection{Method \code{get_use_variable_importance()}}{
Returns logical if it uses to calculate the variable importance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$get_use_variable_importance()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-get_variable_importance"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-get_variable_importance}{}}}
\subsection{Method \code{get_variable_importance()}}{
Returns the variable importance
This is just testing the results
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$get_variable_importance()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-add_variable_importance"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-add_variable_importance}{}}}
\subsection{Method \code{add_variable_importance()}}{
(Experimental)
Add values to the variable importance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$add_variable_importance(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{list with the values for the variable importance}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-run_process"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-run_process}{}}}
\subsection{Method \code{run_process()}}{
Run the Swarm-based algorithm
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$run_process(
  fun,
  args_fun = list(),
  max_iter = 30,
  max_stable = 5,
  pos_fun = 1,
  is_maximize = TRUE,
  show_process = TRUE,
  seed = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{function to maximize}

\item{\code{args_fun}}{extra arguments for the function}

\item{\code{max_iter}}{integer,
maximum number of iterations to take place}

\item{\code{max_stable}}{integer,
maximum number of iterations the results needs to be stable to early stop the result}

\item{\code{pos_fun}}{Output of \code{fun} can give multiple results as a list.
This should give the position of the list which it should maximize/minimize}

\item{\code{is_maximize}}{logical, if the solution is a maximization (TRUE);
if FALSE it is a minimization}

\item{\code{show_process}}{logical, if some in between output should be shown}

\item{\code{seed}}{a single value, interpreted as an integer, or NULL}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list with 2 values \code{AllResults} and \code{BestResult}
\code{BestResult} is list of 2 elements with the position and the result of the position
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-update_all_positions"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-update_all_positions}{}}}
\subsection{Method \code{update_all_positions()}}{
Interface function.
This specific function of this object should not be used
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$update_all_positions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-set_global_best"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-set_global_best}{}}}
\subsection{Method \code{set_global_best()}}{
set the global best based on the results given
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$set_global_best(results)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{results}}{list of results.
List of the result should have 3 elements
\code{Positions}, \code{Results} & \code{AllResults}
based on output of function \code{get_results()}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if the global best is updated
FALSE when the global best did not change
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-get_results"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-get_results}{}}}
\subsection{Method \code{get_results()}}{
get the results of the function to maximize
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$get_results(fun, argsFun, pos_fun = 1, is_maximize = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{function to maximize,
with a binary sequence as first input.
Function to maximize can give a list of results.
Only the first element will be used to maximize.
This can be useful in case other results should to be monitored but should not optimized.}

\item{\code{argsFun}}{list with arguments passed to \code{fun}}

\item{\code{pos_fun}}{position to be used of the output}

\item{\code{is_maximize}}{logical, if the result should be maximized.
if FALSE, the negative will be given.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list with 3 elements with names:
\code{Result} list with all the output results
\code{Positions} list with all the positions checked
\code{AllResults} list with the results which should be optimized
The results and positions are in the same order of each other
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinarySwarm-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BinarySwarm-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinarySwarm$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
